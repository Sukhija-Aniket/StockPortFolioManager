name: Auto Release

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release
    types: [closed]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'release'
        type: choice
        options:
          - release

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install auto
        run: npm install -g auto

      - name: Install git-tag plugin
        run: npm install -g @auto-it/git-tag

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create .autorc
        run: |
          # Check if .autorc exists and backup if needed
          if [ -f ".autorc" ]; then
            echo "Backing up existing .autorc file..."
            cp .autorc .autorc.backup
          fi
          
          # Create new .autorc for release
          cat > .autorc << EOF
          {
            "plugins": [
              "git-tag"
            ],
            "owner": "Sukhija-Aniket",
            "repo": "StockPortfolioManager",
            "name": "github-actions[bot]",
            "email": "github-actions[bot]@users.noreply.github.com",
            "baseBranch": "release",
            "onlyPublishWithReleaseLabel": false,
            "author": "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          }
          EOF

      - name: Commit .autorc
        run: |
          git add .autorc
          git commit -m "Update .autorc for release" || true
          git push origin release

      - name: Ensure clean working directory
        run: |
          git status
          if [ -n "$(git status --porcelain)" ]; then
            echo "Working directory is not clean. Committing remaining changes..."
            git add .
            git commit -m "Auto-commit remaining changes before release" || true
            git push origin release
          fi

      - name: Run auto shipit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: auto shipit 