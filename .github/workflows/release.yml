name: Auto Release

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release
    types: [closed]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'release'
        type: choice
        options:
          - release

# Allow the workflow to bypass branch protection rules
permissions:
  contents: write
  pull-requests: write
  statuses: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install auto
        run: npm install -g auto

      - name: Install git-tag plugin
        run: npm install -g @auto-it/git-tag

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create release branch from current state
        run: |
          git checkout -b auto-release-${{ github.run_id }}
          git reset --hard HEAD

      - name: Ensure clean working directory
        run: |
          git status
          if [ -n "$(git status --porcelain)" ]; then
            echo "Working directory is not clean. Committing remaining changes..."
            git add .
            git commit -m "Auto-commit remaining changes before release" || true
          fi

      - name: Calculate next version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Calculate the next version without publishing
          NEXT_VERSION=$(auto version --dry-run)
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version: $NEXT_VERSION"

      - name: Generate changelog
        id: changelog
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Generate changelog without publishing
          CHANGELOG=$(auto changelog --dry-run)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create version commit
        run: |
          # Create the version commit manually
          auto version --dry-run
          git add .
          git commit -m "Bump version to ${{ steps.version.outputs.next_version }} [skip ci]"

      - name: Push release branch
        run: |
          git push origin auto-release-${{ github.run_id }}

      - name: Create Pull Request to release branch
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          base: release
          branch: auto-release-${{ github.run_id }}
          title: "Auto Release ${{ steps.version.outputs.next_version }}"
          body: |
            ## Auto Release ${{ steps.version.outputs.next_version }}
            
            This is an automated release PR created by the auto-release workflow.
            
            **Trigger:** ${{ github.event_name }}
            **Source:** ${{ github.ref }}
            
            ### Changes
            - Version bump to ${{ steps.version.outputs.next_version }}
            - Auto-generated release notes
            
            ### Changelog
            ${{ steps.changelog.outputs.changelog }}
            
            ---
            *This PR was created automatically by the auto-release workflow.*
          delete-branch: true
          commit-message: "Auto Release ${{ steps.version.outputs.next_version }}"
          title-prefix: "Auto Release: "

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.next_version }}
          release_name: Release ${{ steps.version.outputs.next_version }}
          body: |
            ## Auto Release ${{ steps.version.outputs.next_version }}
            
            This release was created automatically by the auto-release workflow.
            
            ### Changes
            - Version bump to ${{ steps.version.outputs.next_version }}
            - Auto-generated release notes
            
            ### Changelog
            ${{ steps.changelog.outputs.changelog }}
            
            ---
            *This release was created automatically.*
          draft: false
          prerelease: false 